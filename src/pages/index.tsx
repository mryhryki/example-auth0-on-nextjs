import Head from 'next/head'
import Image from 'next/image'
import {Inter} from 'next/font/google'
import styles from '@/styles/Home.module.css'
import {UserProfile, useUser} from "@auth0/nextjs-auth0/client";
import Link from "next/link";
import {getAccessToken, getSession, withPageAuthRequired} from "@auth0/nextjs-auth0";
import {GetServerSidePropsContext} from "next";

const inter = Inter({subsets: ['latin']})

export default function Home() {
  const {user, error, isLoading} = useUser()
  if (user != null) {
    console.debug('#####', JSON.stringify({ user }, null, 2));
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>src/pages/index.tsx</code>
          </p>
          <div>
            {(() => {
              if (isLoading) {
                return "Loading..."
              } else if (error != null) {
                return error.message;
              } else if (user != null) {
                return <Link href="/api/auth/logout">{user.email}</Link>
              }
              return <Link href="/api/auth/login">Login</Link>
            })()}
          </div>
        </div>

        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/next.svg"
            alt="Next.js Logo"
            width={180}
            height={37}
            priority
          />
        </div>

        <div className={styles.grid}>
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main>
    </>
  )
}

// You can optionally pass your own `getServerSideProps` function into
// `withPageAuthRequired` and the props will be merged with the `user` prop
export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  const serverSideProps = await withPageAuthRequired()(ctx);

  // [Session]
  const session = await getSession(ctx.req, ctx.res).catch(() => null);
  process.stdout.write(`### Session ###\n${JSON.stringify(session, null, 2)}\n`)

  // [Access Token]
  const accessTokenResult = await getAccessToken(ctx.req, ctx.res).catch(() => null)
  process.stdout.write(`### Access Token ###\n${JSON.stringify(accessTokenResult, null, 2)}\n`)

  // // [User Profile]
  // const user: UserProfile = (serverSideProps as any /* FIXME */)?.props?.user
  // process.stdout.write(`### User Profile ###\n${JSON.stringify(user, null, 2)}\n`)

  // [User Info]
  // const {hostname} = new URL(process.env.AUTH0_ISSUER_BASE_URL ?? "")
  // const client = new ManagementClient({
  //   token: process.env.AUTH0_MANAGEMENT_API_TOKEN ?? "",
  //   domain: hostname,
  // })

  // const userId = user.sub ?? 'unknown'
  // await client.updateUser({id: userId}, {app_metadata: {Role: "Admin", updatedBy: '{UserID}'}})
  // const auth0User = await client.getUser({id: userId})
  // process.stdout.write(`### Server Side Log 4 ###\n${JSON.stringify({auth0User}, null, 2)}\n`)

  // [Role and Permissions]
  // const userRoles = await client.getUserRoles({id: user.sub ?? ""})
  // const userPermissions = await client.getUserPermissions({id: user.sub ?? ""})
  // process.stdout.write(`### Role and Permissions ###\n${JSON.stringify({ userRoles, userPermissions}, null, 2)}\n`)

  return serverSideProps
}
